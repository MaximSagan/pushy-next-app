import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";

import { trpc } from "../utils/trpc";
import { useRef } from "react";


export default function Sender() {
  const hello = trpc.hello.useQuery({ text: "sender" });
  const postNotificationMutation = trpc.postNotification.useMutation();

  const notificationContentRef = useRef<HTMLInputElement>(null);
  const notificationCountdownRef = useRef<HTMLInputElement>(null);
  const sendNotification = async () => {
    const content =
      notificationContentRef.current?.value ?? "Hi, I'm a notification!";
    const countdownSec = notificationCountdownRef.current?.valueAsNumber ?? 3;
    postNotificationMutation.mutateAsync({ content, countdownSec });
  };

  return (
    <>
      <Head>
        <title>Sender</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <p>From TRPC: {hello.data ? hello.data.greeting : "Loading..."}</p>
        <form
          className={styles.form}
          onSubmit={(e) => {
            e.preventDefault();
            sendNotification();
          }}
        >
          <label>Content:</label>
          <input type="text" ref={notificationContentRef} defaultValue="Hi" />
          <label>Send notification in (x) seconds:</label>
          <input
            type="number"
            ref={notificationCountdownRef}
            defaultValue={3}
          />
          <button type="submit">Send notification</button>
        </form>
        <p>
          Send notification result:&nbsp;
          <code className={styles.code}>
            {JSON.stringify(postNotificationMutation.data?.results)}
          </code>
        </p>
      </main>
    </>
  );
}
